package MVoter;


import java.sql.*;import javax.swing.*;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ernest
 */
public class view_tables extends javax.swing.JFrame {
    Connection conn= null;
    String url = "jdbc:mysql://localhost/";
    String dbName = "db66001";
    String driver ="com.mysql.jdbc.Driver";
    String user = "root";
    String password = "";

    /*Connection conn = null;
    String url = "jdbc:mysql://192.168.170.15/";
    String dbName = "db66001";
    String driver = "com.mysql.jdbc.Driver";
    String userName = "66001";
    String password = "66001";*/
    Statement st;
    ResultSet rs;
    JLabel ul,pl,npl,cpl;
    JTextField ut;
    JPasswordField up,np,cp;
    PasswordService ps;

    /**
     * Creates new form view_tables
     */
    public view_tables() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        try{
	       Class.forName(driver);

             conn = DriverManager.getConnection(url+dbName,user,password);

              st = conn.createStatement();

             this.setTitle("Tables");

	            }


	            catch(Exception exp){
	              JOptionPane.showMessageDialog(null, "Cannot connect to the database,check network settings.","ERROR",JOptionPane.ERROR_MESSAGE);
	            }
        
        try {

	            rs = (com.mysql.jdbc.ResultSet) st.executeQuery("SELECT election_id FROM election_details");
	            while(rs.next()){
                     election_id_combo.addItem(rs.getString("election_id"));
                    }
	            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        registration = new javax.swing.JButton();
        candidates = new javax.swing.JButton();
        election = new javax.swing.JButton();
        votings = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        election_id_combo = new javax.swing.JComboBox();
        type_text = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        registration_report = new javax.swing.JButton();
        candidate_reports = new javax.swing.JButton();
        elction_details = new javax.swing.JButton();
        voting_report = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel1.setText("VIEW DATABASES DATA");

        registration.setText("Registration");
        registration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationActionPerformed(evt);
            }
        });

        candidates.setText("Candidate");
        candidates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candidatesActionPerformed(evt);
            }
        });

        election.setText("Elections");
        election.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electionActionPerformed(evt);
            }
        });

        votings.setText("Votings");
        votings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                votingsActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        election_id_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Election ID" }));
        election_id_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                election_id_comboActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        registration_report.setText("Print");
        registration_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registration_reportActionPerformed(evt);
            }
        });

        candidate_reports.setText("print");
        candidate_reports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candidate_reportsActionPerformed(evt);
            }
        });

        elction_details.setText("Print");
        elction_details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elction_detailsActionPerformed(evt);
            }
        });

        voting_report.setText("Print");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(registration)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                                .addComponent(candidates, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(election, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114)
                                .addComponent(votings, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 357, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(245, 245, 245))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(registration_report)
                        .addGap(172, 172, 172)
                        .addComponent(candidate_reports)
                        .addGap(148, 148, 148)
                        .addComponent(elction_details)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                        .addComponent(voting_report)
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(election_id_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(type_text, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addContainerGap(532, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(election_id_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registration)
                    .addComponent(candidates)
                    .addComponent(election)
                    .addComponent(votings))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registration_report)
                    .addComponent(voting_report)
                    .addComponent(elction_details)
                    .addComponent(candidate_reports))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        registration_report.setVisible(false);
        candidate_reports.setVisible(false);
        elction_details.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationActionPerformed
        // TODO add your handling code here:
        
         String sql = "Select * from registration ";
        
        try{
            int c=0;
            rs = st.executeQuery(sql);
            st = conn.prepareStatement(sql);
            
            while(rs.next()){
                table.setModel(DbUtils.resultSetToTableModel(rs));
                registration_report.setVisible(true);
            }
            
            
            
            
            
        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp,"Error",JOptionPane.ERROR_MESSAGE);
            
            
        }
    }//GEN-LAST:event_registrationActionPerformed

    private void candidatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candidatesActionPerformed
        // TODO add your handling code here:
        registration_report.setVisible(false);
        candidate_reports.setVisible(true);

        String sql = "Select * from candidates ";        
        try{
            int c=0;
            rs = st.executeQuery(sql);
            st = conn.prepareStatement(sql);
            
            while(rs.next()){
                table.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            
            
            
            
        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp,"Error",JOptionPane.ERROR_MESSAGE);
            
            
        }
    }//GEN-LAST:event_candidatesActionPerformed

    private void electionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electionActionPerformed
        // TODO add your handling code here:
        elction_details.setVisible(true);
        candidate_reports.setVisible(false);
        registration_report.setVisible(false);
        String sql = "Select * from election_details ";
        
        try{
            int c=0;
            rs = st.executeQuery(sql);
            st = conn.prepareStatement(sql);
            
            while(rs.next()){
                table.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            
            
            
            
        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp,"Error",JOptionPane.ERROR_MESSAGE);
            
            
        }
    }//GEN-LAST:event_electionActionPerformed

    private void votingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_votingsActionPerformed
        // TODO add your handling code here:
        int t=election_id_combo.getSelectedIndex();
        if (t !=0) {
            String type_t=type_text.getText();
            String type=election_id_combo.getSelectedItem().toString();
            String databasename=type_t+"_"+type;

            try {
                String sql="select * from "+databasename;
                rs=(com.mysql.jdbc.ResultSet) st.executeQuery(sql);
                st = (com.mysql.jdbc.Statement) conn.prepareStatement(sql);
               table.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select Election ID");
        }
        
        
    }//GEN-LAST:event_votingsActionPerformed

    private void election_id_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_election_id_comboActionPerformed
        // TODO add your handling code here:
        String select=election_id_combo.getSelectedItem().toString();
        try {
            String sql="Select * from election_details where election_id like '"+select+"'";
            rs=(com.mysql.jdbc.ResultSet) st.executeQuery(sql);
            st=(com.mysql.jdbc.Statement) conn.prepareStatement(sql);
            int c=0;
            while(rs.next()){
                String type=rs.getString("type");
                type_text.setText(type);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_election_id_comboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        select_frame sf=new select_frame();
        sf.show();
        this.show(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void registration_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registration_reportActionPerformed
        // TODO add your handling code here:
        try{

            conn = DriverManager.getConnection(url+dbName,user,password);
          JasperDesign jpd=JRXmlLoader.load("reg_report.jrxml");
          JasperReport jrp= JasperCompileManager.compileReport(jpd);
          JasperPrint jprint= JasperFillManager.fillReport(jrp,null,conn);
            JasperViewer.viewReport(jprint,false);
        }
         catch(Exception e){
          JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_registration_reportActionPerformed

    private void candidate_reportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candidate_reportsActionPerformed
        // TODO add your handling code here:
        
        try{

            conn = DriverManager.getConnection(url+dbName,user,password);
          JasperDesign jpd=JRXmlLoader.load("cand_report.jrxml");
          JasperReport jrp= JasperCompileManager.compileReport(jpd);
          JasperPrint jprint= JasperFillManager.fillReport(jrp,null,conn);
            JasperViewer.viewReport(jprint,false);
        }
         catch(Exception e){
          JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_candidate_reportsActionPerformed

    private void elction_detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elction_detailsActionPerformed
        // TODO add your handling code here:
         
        try{

            conn = DriverManager.getConnection(url+dbName,user,password);
          JasperDesign jpd=JRXmlLoader.load("elect_details_report.jrxml");
          JasperReport jrp= JasperCompileManager.compileReport(jpd);
          JasperPrint jprint= JasperFillManager.fillReport(jrp,null,conn);
            JasperViewer.viewReport(jprint,false);
        }
         catch(Exception e){
          JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_elction_detailsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        try {
//                      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//
//                    } catch (Exception e) {
//                      System.err.println("Look and feel not set.");
//                    }
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
                      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                    } catch (Exception e) {
                      System.err.println("Look and feel not set.");
                    }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new view_tables().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton candidate_reports;
    private javax.swing.JButton candidates;
    private javax.swing.JButton elction_details;
    private javax.swing.JButton election;
    private javax.swing.JComboBox election_id_combo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton registration;
    private javax.swing.JButton registration_report;
    private javax.swing.JTable table;
    private javax.swing.JTextField type_text;
    private javax.swing.JButton voting_report;
    private javax.swing.JButton votings;
    // End of variables declaration//GEN-END:variables
}
