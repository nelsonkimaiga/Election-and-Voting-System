package MVoter;


import java.awt.*;
import java.sql.*;
import java.util.logging.*;
import javax.swing.*;
import java.io.*;
import javax.imageio.ImageIO;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * voting_for_candidate.java
 *
 * 
 */
/**
 *
 * @author Kimaiga
 */
public class voting_for_candidate extends javax.swing.JFrame {
    Connection conn= null;
    String url = "jdbc:mysql://localhost/";
    String dbName = "db66001";
    String driver ="com.mysql.jdbc.Driver";
    String user = "root";
    String password = "";

    /*Connection conn = null;
    String url = "jdbc:mysql://192.168.170.15/";
    String dbName = "db66001";
    String driver = "com.mysql.jdbc.Driver";
    String userName = "66001";
    String password = "66001";*/
    Statement st;
    ResultSet rs;
    JFrame f=new JFrame();
    String input;
    String gen_constituency;
    String gen_county;
    

    /** Creates new form voting_for_candidate */
    public voting_for_candidate() {
        initComponents();
        setLocationRelativeTo(null);
         try{
	       Class.forName(driver);

             conn = DriverManager.getConnection(url+dbName,user,password);

              st = conn.createStatement();

             this.setTitle("Candidate Votings Option");

	            }


	            catch(Exception exp){
	              JOptionPane.showMessageDialog(null, "Cannot connect to the database,check network settings.","ERROR",JOptionPane.ERROR_MESSAGE);
	            }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        login_button = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        county_lab = new javax.swing.JLabel();
        type_com = new javax.swing.JComboBox();
        cons_lab = new javax.swing.JLabel();
        ward_lab = new javax.swing.JLabel();
        county_com = new javax.swing.JComboBox();
        cons_com = new javax.swing.JComboBox();
        ward_com = new javax.swing.JComboBox();
        elec_lab = new javax.swing.JLabel();
        elecID_combobox = new javax.swing.JComboBox();
        user_id = new javax.swing.JTextField();
        userpass = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        id_number = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        voter_id_textfield = new javax.swing.JTextField();
        verify_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        verification_table = new javax.swing.JTable();
        start_voting_button_ = new javax.swing.JButton();
        president_combo = new javax.swing.JComboBox();
        gov_combo = new javax.swing.JComboBox();
        mp_combo = new javax.swing.JComboBox();
        council_combo = new javax.swing.JComboBox();
        governor_image_label = new javax.swing.JLabel();
        councillor_image_label = new javax.swing.JLabel();
        mp_image_label = new javax.swing.JLabel();
        pres = new javax.swing.JLabel();
        gov = new javax.swing.JLabel();
        mp = new javax.swing.JLabel();
        council = new javax.swing.JLabel();
        president_image_label = new javax.swing.JLabel();
        voting_button = new javax.swing.JButton();
        serial_label = new javax.swing.JLabel();
        serial_textfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        if_general_showWard_combo = new javax.swing.JComboBox();
        gen_county_textfield = new javax.swing.JTextField();
        gen_const_textfields = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel1.setText("VOTING");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel2.setText("Administrator ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel3.setText("Password");

        login_button.setText("Log_In");
        login_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_buttonActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Type of election");

        county_lab.setText("County");
        county_lab.setVisible(false);

        type_com.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select type","General_Election","County_By_Election","Constituency_By_Election","Ward_By_Election" }));
        type_com.setEnabled(false);
        type_com.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type_comActionPerformed(evt);
            }
        });

        cons_lab.setText("Constituency");

        ward_lab.setText("Ward");

        county_com.setEnabled(false);

        cons_com.setEnabled(false);

        ward_com.setEnabled(false);

        elec_lab.setText("ElectionID");

        elecID_combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select ID" }));
        elecID_combobox.setEnabled(false);
        elecID_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elecID_comboboxActionPerformed(evt);
            }
        });

        user_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_idActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setText("VOTER VERIFICATON");

        jLabel5.setText("ID Card Number");

        id_number.setDocument(new TextfieldFilter(TextfieldFilter.NUMERIC));

        jLabel6.setText("Voter ID");

        voter_id_textfield.setDocument(new TextfieldFilter(TextfieldFilter.NUMERIC));

        verify_button.setText("verify");
        verify_button.setEnabled(false);
        verify_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verify_buttonActionPerformed(evt);
            }
        });

        verification_table.setFont(new java.awt.Font("Times New Roman", 0, 12));
        verification_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        verification_table.setEnabled(false);
        jScrollPane1.setViewportView(verification_table);

        start_voting_button_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVoter/start.png"))); // NOI18N
        start_voting_button_.setText("click to start voting");
        start_voting_button_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                start_voting_button_MouseClicked(evt);
            }
        });
        start_voting_button_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_voting_button_ActionPerformed(evt);
            }
        });

        president_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select president" }));
        president_combo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                president_comboMouseClicked(evt);
            }
        });
        president_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                president_comboActionPerformed(evt);
            }
        });

        gov_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select Governor" }));
        gov_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gov_comboActionPerformed(evt);
            }
        });

        mp_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select MP" }));
        mp_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mp_comboActionPerformed(evt);
            }
        });

        council_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Councillor" }));
        council_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                council_comboActionPerformed(evt);
            }
        });

        governor_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVoter/unknow_user_image - Copy.jpg"))); // NOI18N

        councillor_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVoter/unknow_user_image - Copy.jpg"))); // NOI18N

        mp_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVoter/unknow_user_image - Copy.jpg"))); // NOI18N

        pres.setText("President");

        gov.setText("Governor");

        mp.setText("Member of Parliament");

        council.setText("Councillor");

        president_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVoter/unknow_user_image - Copy.jpg"))); // NOI18N

        voting_button.setText("vote");
        voting_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voting_buttonActionPerformed(evt);
            }
        });

        serial_label.setText("Vote Serial Number");
        serial_label.setVisible(false);

        serial_textfield.setEditable(false);
        serial_textfield.setVisible(false);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel8.setText("SET ELECTION DETAILS");

        if_general_showWard_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Ward" }));
        if_general_showWard_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if_general_showWard_comboActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Election Details");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Candidate details");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Electoral boundaries");
        jMenu1.add(jMenuItem3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Select Frame");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem4.setText("Log Out");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
                .addGap(81, 81, 81))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(userpass)
                                    .addComponent(user_id, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(login_button)
                                .addGap(48, 48, 48)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(101, 101, 101))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(310, 310, 310)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ward_lab)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cons_lab)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(elec_lab)
                                            .addComponent(jLabel7)
                                            .addComponent(county_lab))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(county_com, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(elecID_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(type_com, 0, 141, Short.MAX_VALUE)
                                            .addComponent(cons_com, 0, 160, Short.MAX_VALUE)
                                            .addComponent(ward_com, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gen_const_textfields)
                                    .addComponent(gen_county_textfield)
                                    .addComponent(if_general_showWard_combo, 0, 126, Short.MAX_VALUE))))
                        .addGap(89, 89, 89))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38)
                        .addComponent(id_number, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(jLabel6)
                        .addGap(47, 47, 47)
                        .addComponent(voter_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(verify_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(start_voting_button_))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(president_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(president_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(governor_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(serial_label)
                                            .addComponent(gov_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addComponent(serial_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(pres)
                                .addGap(173, 173, 173)
                                .addComponent(gov)
                                .addGap(155, 155, 155)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(mp_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(mp, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(90, 90, 90))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mp_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(council))
                            .addComponent(councillor_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(clear)
                                    .addComponent(council_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(voting_button)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(elec_lab)
                            .addComponent(elecID_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(type_com, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(if_general_showWard_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(county_lab)
                            .addComponent(county_com, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gen_county_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cons_lab)
                            .addComponent(cons_com, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gen_const_textfields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ward_lab)
                            .addComponent(ward_com, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(user_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(login_button)
                            .addComponent(jButton2))))
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(id_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(voter_id_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verify_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(start_voting_button_)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mp)
                    .addComponent(gov)
                    .addComponent(pres)
                    .addComponent(council))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(president_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mp_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(councillor_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(governor_image_label, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(president_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mp_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(council_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gov_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(serial_label))
                    .addComponent(serial_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voting_button)
                    .addComponent(clear))
                .addGap(275, 275, 275))
        );

        cons_lab.setVisible(false);
        ward_lab.setVisible(false);
        county_com.setVisible(false);
        cons_com.setVisible(false);
        ward_com.setVisible(false);
        start_voting_button_.setVisible(false);
        president_combo.setVisible(false);
        gov_combo.setVisible(false);
        mp_combo.setVisible(false);
        council_combo.setVisible(false);
        governor_image_label.setVisible(false);
        councillor_image_label.setVisible(false);
        mp_image_label.setVisible(false);
        pres.setVisible(false);
        gov.setVisible(false);
        mp.setVisible(false);
        council.setVisible(false);
        president_image_label.setVisible(false);
        voting_button.setVisible(false);
        for(int i=0; i < 1 ; i++){
            serial_textfield.setText("VT"+(int)(Math.random()*10000));
        }
        if_general_showWard_combo.setEnabled(false);
        clear.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void login_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_buttonActionPerformed

                PasswordService ps=new PasswordService();
        String user=user_id.getText();
        String pass=userpass.getText();
        
        
        
        try {
            
            String passenc=ps.encrypt(pass);
              try {
                 String sql="SELECT *  FROM projectlogin WHERE username='"+user+"'and userpassword ='"+passenc+"'";
                 st.execute(sql);
                  rs=st.executeQuery(sql);
                  int c=0;
                  while(rs.next()){
                    c++;
                    }
                  if (c==1) {
                      /////add items in the combobox in joptionpane
                      JComboBox combo=new JComboBox();
                      try {
                    
                    String sql_ward="Select * from ward_database ";
                    rs=st.executeQuery(sql_ward);
                    st=conn.prepareStatement(sql_ward);
                    while (rs.next()) { 
                        
                    if_general_showWard_combo.addItem(rs.getString("name"));


                
            }
                    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
                      
                      
                      
                      
                      /////////
                      elecID_combobox.setEnabled(true);
                      type_com.setEnabled(false);
                      
                      JLabel label=new JLabel("<html><font color=red><b>ENTER WARD</b></font></html>");
                      
//                      Object[] params = {label, combo};
//                      input = JOptionPane.showInputDialog(null, params, "Message", JOptionPane.QUESTION_MESSAGE);
//
//                      JOptionPane.showMessageDialog(null, input);
                      
                      try {
            
            
            
	            rs = st.executeQuery("SELECT election_id FROM election_details");
	            while(rs.next()){
                     elecID_combobox.addItem(rs.getString("election_id"));
                    }
	            rs.close();
	            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
                                                                                                                                                                                                   
                      //////////////////////////////////////////////////////////////////////////////////
                      ///////////////////////    show log in was successfull    ////////////////////////
                      //////////////////////        display message pane        ////////////////////////
                      //////////////////////////////////////////////////////////////////////////////////
                      this.setTitle("WELCOME USER "+user);
//                      JOptionPane.showMessageDialog(rootPane, "logged in");

                     
                }else{
                    JOptionPane.showMessageDialog(rootPane, "invalid password or username");
                   
                  }
            } catch (Exception p) {
                JOptionPane.showMessageDialog(rootPane, p.getMessage());
            }
        } catch (Exception ex) {
            Logger.getLogger(Log_in_form2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_login_buttonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        user_id.setText("");
        userpass.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void verify_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verify_buttonActionPerformed

        int s=type_com.getSelectedIndex();
        if (s==1) {
        String id = id_number.getText() ;
        String vid=voter_id_textfield.getText();
        if (id.equals("")|| vid.equals("")) {
            id_number.setBackground(Color.lightGray);
            voter_id_textfield.setBackground(Color.lightGray);
            
        }
        else {
        String sql = "Select id_no,s_name,m_name,m_name,gender,voter_id,ward,	constituency,county,poll_center	 from registration where id_no ='"+id+"' and voter_id ='"+vid+"'";

        try{
            int c=0;
            rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
             
                  while(rs.next()){
                    c++;
                    }
            if (c==1) {


           rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
            verification_table.setModel(DbUtils.resultSetToTableModel(rs));
            start_voting_button_.setVisible(true);
            } else {
                 JOptionPane.showMessageDialog(null, "<html><b><font color=red>NOT REGISTERED</font><br/>ID Number: <font color=red>"+id+"</font></html>\n<html><b>Voter ID : <font color=red>"+vid+"<br/> </html>","Information",JOptionPane.INFORMATION_MESSAGE );
            }
           
            
                

        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp,"Error",JOptionPane.ERROR_MESSAGE);           
        }
        }
            
        } else if(s==2){
            String county_name=county_com.getSelectedItem().toString();
        String id = id_number.getText() ;
        String vid=voter_id_textfield.getText();
        if (id.equals("")|| vid.equals("")) {
            id_number.setBackground(Color.lightGray);
            voter_id_textfield.setBackground(Color.lightGray);
            
        }
        else {
        String sql = "Select id_no,s_name,m_name,m_name,gender,voter_id,ward,	constituency,county,poll_center	 from registration where id_no ='"+id+"' and county ='"+county_name+"'";

        try{
            int c=0;
            rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
             
                  while(rs.next()){
                    c++;
                    }
            if (c==1) {


           rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
            verification_table.setModel(DbUtils.resultSetToTableModel(rs));
            start_voting_button_.setVisible(true);
            } else {
                 JOptionPane.showMessageDialog(null, "<html><b><font color=red>NOT REGISTERED IN</font> <br/>"+county_name+"<br/>ID Number: <font color=red>"+id+"</font></html>\n<html><b>Voter ID : <font color=red>"+vid+"<br/> </html>","Information",JOptionPane.INFORMATION_MESSAGE );
            }
           
            
                

        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);           
        }
        }
          
        }else if(s==3){
        String constituency_name=cons_com.getSelectedItem().toString();
                
        String id = id_number.getText() ;
        String vid=voter_id_textfield.getText();
        if (id.equals("")|| vid.equals("")) {
            id_number.setBackground(Color.lightGray);
            voter_id_textfield.setBackground(Color.lightGray);
            
        }
        else {
        String sql = "Select id_no,s_name,m_name,m_name,gender,voter_id,ward,	constituency,county,poll_center	 from registration where id_no ='"+id+"' and constituency ='"+constituency_name+"'";

        try{
            int c=0;
            rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
             
                  while(rs.next()){
                    c++;
                    }
            if (c==1) {


           rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
            verification_table.setModel(DbUtils.resultSetToTableModel(rs));
            start_voting_button_.setVisible(true);
            } else {
                 JOptionPane.showMessageDialog(null, "<html><b><font color=red>NOT REGISTERED IN</font> <br/>"+constituency_name+"<br/>ID Number: <font color=red>"+id+"</font></html>\n<html><b>Voter ID : <font color=red>"+vid+"<br/> </html>","Information",JOptionPane.INFORMATION_MESSAGE );
            }
           
            
                

        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);           
        }
        }
        }
        //////////////////////////////////////////////////////
                     // verify ward of the voter
        else{
            String ward_name=ward_com.getSelectedItem().toString();
                
        String id = id_number.getText() ;
        String vid=voter_id_textfield.getText();
        if (id.equals("")|| vid.equals("")) {
            id_number.setBackground(Color.lightGray);
            voter_id_textfield.setBackground(Color.lightGray);
            
        }
        else {
        String sql = "Select id_no,s_name,m_name,m_name,gender,voter_id,ward,	constituency,county,poll_center	 from registration where id_no ='"+id+"' and ward ='"+ward_name+"'";

        try{
            int c=0;
            rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
             
                  while(rs.next()){
                    c++;
                    }
            if (c==1) {


           rs = st.executeQuery(sql);
             st = conn.prepareStatement(sql);
            verification_table.setModel(DbUtils.resultSetToTableModel(rs));
            start_voting_button_.setVisible(true);
            } else {
                 JOptionPane.showMessageDialog(null, "<html><b><font color=red>NOT REGISTERED IN</font> <br/>"+ward_name+"<br/>ID Number: <font color=red>"+id+"</font></html>\n<html><b>Voter ID : <font color=red>"+vid+"<br/> </html>","Information",JOptionPane.INFORMATION_MESSAGE );
            }
           
            
                

        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);           
        }
        }
        }
        
        
        
        
 
        
        // TODO add your handling code here:
    }//GEN-LAST:event_verify_buttonActionPerformed

    private void start_voting_button_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_voting_button_ActionPerformed

        for(int i=0; i < 1 ; i++){
        serial_textfield.setText("VT"+(int)(Math.random()*10000));
        }
        int i=type_com.getSelectedIndex();
        type_com.setEnabled(false);
        String id=elecID_combobox.getSelectedItem().toString();
                try {                      
            
	            rs = st.executeQuery("SELECT Fname, Lname  FROM candidates where post ='president' and election_id ='"+id+"'");
                    String imgLen="";
	            while(rs.next()){
                     president_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
                                                         
                    }
	            rs.close();
	            
                  } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
                }
                try {                      
            
	            rs = st.executeQuery("SELECT Fname, Lname , Image FROM candidates where post ='governor' and election_id ='"+id+"'");
                    String imgLen="";
	            while(rs.next()){
                     gov_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
                                                         
                    }
	            rs.close();
	            
                  } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
                }
                try {                      
            
	            rs = st.executeQuery("SELECT Fname, Lname , Image FROM candidates where post ='MP' and election_id ='"+id+"'");
                    String imgLen="";
	            while(rs.next()){
                     mp_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
                                                         
                    }
	            rs.close();
	            
                  } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
                }
                try {                      
            
	            rs = st.executeQuery("SELECT Fname, Lname , Image FROM candidates where post ='Councillor'and election_id ='"+id+"'");
                    String imgLen="";
	            while(rs.next()){
                     council_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
                                                         
                    }
	            rs.close();
	            
                  } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
                }
                
        
        if (i==1) {
            pres.setVisible(true);
            gov.setVisible(true);
            mp.setVisible(true);
            council.setVisible(true);
            president_combo.setVisible(true);
            gov_combo.setVisible(true);
            mp_combo.setVisible(true);
            council_combo.setVisible(true);
            governor_image_label.setVisible(true);
            president_image_label.setVisible(true);
            mp_image_label.setVisible(true);
            councillor_image_label.setVisible(true);
            voting_button.setVisible(true);
            serial_label.setVisible(true);
            serial_textfield.setVisible(true);
            clear.setVisible(true);




            
        } else if(i==2){
            pres.setVisible(false);
            gov.setVisible(true);
            mp.setVisible(false);
            council.setVisible(false);
            president_combo.setVisible(false);
            gov_combo.setVisible(true);
            mp_combo.setVisible(false);
            council_combo.setVisible(false);
            governor_image_label.setVisible(true);
            president_image_label.setVisible(false);
            mp_image_label.setVisible(false);
            councillor_image_label.setVisible(false);
            voting_button.setVisible(true);
            serial_label.setVisible(true);
            serial_textfield.setVisible(true);
            clear.setVisible(true);
            String county=county_com.getSelectedItem().toString();
//            try {
//                       rs = st.executeQuery("SELECT Fname, Lname , Image FROM candidates where post ='Governor'");
//                    String imgLen="";
//	            while(rs.next()){
//                     gov_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
//                     Blob test=rs.getBlob("image");
//                     if( test != null )                   
//                                                              
//                        try {
//                            File tmpFile = new File("tmpImage");
//                            FileOutputStream fos = new FileOutputStream(tmpFile);
//                            fos.write( test.getBytes(1L, (int)test.length()) );
//
////                            String ss=tmpFile.getAbsolutePath();
////                            System.out.println(ss);
//
//                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );
////                            JOptionPane.showMessageDialog(null, icon);
//                            label.setIcon(icon);
//                            tmpFile.deleteOnExit();
//
//                            
//                        } catch (Exception e) {
////                            JOptionPane.showMessageDialog(rootPane, e, "Error", JOptionPane.ERROR_MESSAGE);
//                            System.out.println(e);
//                        }
//                     
//                    
//
//
//                     
//                    }
//	            rs.close();
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
//                
//            }
        }
        else if(i==3){
           pres.setVisible(false);
            gov.setVisible(false);
            mp.setVisible(true);
            council.setVisible(false);
            president_combo.setVisible(false);
            gov_combo.setVisible(false);
            mp_combo.setVisible(true);
            council_combo.setVisible(false);
            mp_image_label.setVisible(true); 
            governor_image_label.setVisible(false); 
            president_image_label.setVisible(false);
            councillor_image_label.setVisible(false);
            voting_button.setVisible(true);
            serial_label.setVisible(true);
            serial_textfield.setVisible(true);
            clear.setVisible(true);
            
            
            
        }else if(i==4){
           pres.setVisible(false);
            gov.setVisible(false);
            mp.setVisible(false);
            council.setVisible(true);
            president_combo.setVisible(false);
            gov_combo.setVisible(false);
            mp_combo.setVisible(false);
            council_combo.setVisible(true);
            governor_image_label.setVisible(false); 
            president_image_label.setVisible(false);
            mp_image_label.setVisible(false);
            councillor_image_label.setVisible(true);
            voting_button.setVisible(true);
            serial_label.setVisible(true);
            serial_textfield.setVisible(true);
            clear.setVisible(false);
            
//            try {
//                       rs = st.executeQuery("SELECT Fname, Lname , Image FROM candidates where post ='Councillor'");
//                    String imgLen="";
//	            while(rs.next()){
//                     gov_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
//                     Blob test=rs.getBlob("image");
//                     if( test != null )                   
//                                                              
//                        try {
//                            File tmpFile = new File("tmpImage");
//                            FileOutputStream fos = new FileOutputStream(tmpFile);
//                            fos.write( test.getBytes(1L, (int)test.length()) );
//
////                            String ss=tmpFile.getAbsolutePath();
////                            System.out.println(ss);
//
//                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );
////                            JOptionPane.showMessageDialog(null, icon);
//                            label.setIcon(icon);
//                            tmpFile.deleteOnExit();
//
//                            
//                        } catch (Exception e) {
//                        }
//                     
//                    
//
//
//                     
//                    }
//	            rs.close();
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
//                
//            }
            
        }else{
            pres.setVisible(false);
            gov.setVisible(false);
            mp.setVisible(false);
            council.setVisible(false);
            president_combo.setVisible(false);
            gov_combo.setVisible(false);
            mp_combo.setVisible(false);
            council_combo.setVisible(false);
            governor_image_label.setVisible(false); 
            president_image_label.setVisible(false);
            mp_image_label.setVisible(false);
            councillor_image_label.setVisible(false);
            serial_label.setVisible(false);
            serial_textfield.setVisible(false);
            voting_button.setVisible(false);
            clear.setVisible(true);
            
        }
//        try {                      
//            
//	            rs = st.executeQuery("SELECT Fname, Lname , Image FROM candidates where post ='president'");
//                    String imgLen="";
//	            while(rs.next()){
//                     president_combo.addItem(rs.getString("Fname")+" "+ rs.getString("Lname"));
//                     Blob test=rs.getBlob("image");
//                     if( test != null )                   
//                                                              
//                        try {
//                            File tmpFile = new File("tmpImage");
//                            FileOutputStream fos = new FileOutputStream(tmpFile);
//                            fos.write( test.getBytes(1L, (int)test.length()) );
//
////                            String ss=tmpFile.getAbsolutePath();
////                            System.out.println(ss);
//
//                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );
////                            JOptionPane.showMessageDialog(null, icon);
//                            label.setIcon(icon);
//                            tmpFile.deleteOnExit();
//
//                            
//                        } catch (Exception e) {
//                        }
//                     
//                    
//
//
//                     
//                    }
//	            rs.close();
//	            
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
//        }
        /////////////////////////////////////////////////
        ////////  set the candidates details in /////////
        //////////      combobox    /////////////////////
        /////////////////////////////////////////////////
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_start_voting_button_ActionPerformed

    private void president_comboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_president_comboMouseClicked

        
        // TODO add your handling code here:
    }//GEN-LAST:event_president_comboMouseClicked

    private void start_voting_button_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_start_voting_button_MouseClicked
        // TODO add your handling code here:
        start_voting_button_.setEnabled(false);
      
    }//GEN-LAST:event_start_voting_button_MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        candidate_form c=new candidate_form();
        c.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    @SuppressWarnings("static-access")
    private void president_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_president_comboActionPerformed

        String names=president_combo.getSelectedItem().toString();
        String[] devide=names.split(" ") ;
        String fn=devide[0];
        String ln=devide[1];
        try {                      
            
	            rs = st.executeQuery("SELECT Image FROM candidates where Fname ='"+fn+"' and Lname ='"+ln+"'");
                    String imgLen="";
	            while(rs.next()){
                     
                     Blob test=rs.getBlob("image");
                     if( test != null )                   
                                                              
                        try {
                            File tmpFile = new File("tmpImage");
                            FileOutputStream fos = new FileOutputStream(tmpFile);
                            fos.write( test.getBytes(1L, (int)test.length()) );

//                            String ss=tmpFile.getAbsolutePath();
//                            System.out.println(ss);

                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );//                            
//                            ImageIcon tinyPicture= new ImageIcon();
                                Image image= icon.getImage();
                                
                         image = image.getScaledInstance(200, -1, image.SCALE_SMOOTH);
//                            label.setIcon(tinyPicture);
                            president_image_label.setIcon(icon);
                            tmpFile.deleteOnExit();

                            
                        } catch (Exception e) {

                        }
                     
                    


                     
                    }
	            rs.close();
	            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_president_comboActionPerformed

    private void gov_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gov_comboActionPerformed

        
        
        String names=gov_combo.getSelectedItem().toString();
        String[] devide=names.split(" ") ;
        String fn=devide[0];
        String ln=devide[1];
        try {                      
            
	            rs = st.executeQuery("SELECT Image FROM candidates where Fname ='"+fn+"' and Lname ='"+ln+"'");
                    String imgLen="";
	            while(rs.next()){
                     
                     Blob test=rs.getBlob("image");
                     if( test != null )                   
                                                              
                        try {
                            File tmpFile = new File("tmpImage");
                            FileOutputStream fos = new FileOutputStream(tmpFile);
                            fos.write( test.getBytes(1L, (int)test.length()) );

                            String ss=tmpFile.getAbsolutePath();
                            System.out.println(ss);

                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );
//                            JOptionPane.showMessageDialog(null, icon);
                            governor_image_label.setIcon(icon);
                            tmpFile.deleteOnExit();

                            
                        } catch (Exception e) {
                        }
                     
                    


                     
                    }
	            rs.close();
	            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_gov_comboActionPerformed

    private void council_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_council_comboActionPerformed

        String names=council_combo.getSelectedItem().toString();
        String[] devide=names.split(" ") ;
        String fn=devide[0];
        String ln=devide[1];
        try {                      
            
	            rs = st.executeQuery("SELECT Image FROM candidates where Fname ='"+fn+"' and Lname ='"+ln+"'");
                    String imgLen="";
	            while(rs.next()){
                     
                     Blob test=rs.getBlob("image");
                     if( test != null )                   
                                                              
                        try {
                            File tmpFile = new File("tmpImage");
                            FileOutputStream fos = new FileOutputStream(tmpFile);
                            fos.write( test.getBytes(1L, (int)test.length()) );

                            String ss=tmpFile.getAbsolutePath();
                            System.out.println(ss);

                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );
//                            JOptionPane.showMessageDialog(null, icon);
                            councillor_image_label.setIcon(icon);
                            tmpFile.deleteOnExit();

                            
                        } catch (Exception e) {
                        }
                     
                    


                     
                    }
	            rs.close();
	            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_council_comboActionPerformed

    private void mp_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mp_comboActionPerformed

        String names=mp_combo.getSelectedItem().toString();
        String[] devide=names.split(" ") ;
        String fn=devide[0];
        String ln=devide[1];
        try {                      
            
	            rs = st.executeQuery("SELECT Image FROM candidates where Fname ='"+fn+"' and Lname ='"+ln+"'");
                    String imgLen="";
	            while(rs.next()){
                     
                     Blob test=rs.getBlob("image");
                     if( test != null )                   
                                                              
                        try {
                            File tmpFile = new File("tmpImage");
                            FileOutputStream fos = new FileOutputStream(tmpFile);
                            fos.write( test.getBytes(1L, (int)test.length()) );

                            String ss=tmpFile.getAbsolutePath();
                            System.out.println(ss);

                            ImageIcon icon = new ImageIcon(ImageIO.read(tmpFile) );
//                            JOptionPane.showMessageDialog(null, icon);
                            mp_image_label.setIcon(icon);
                            tmpFile.deleteOnExit();

                            
                        } catch (Exception e) {

                        }
                     
                    


                     
                    }
	            rs.close();
	            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_mp_comboActionPerformed

    private void voting_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voting_buttonActionPerformed

        
        String id=elecID_combobox.getSelectedItem().toString();
        String t=type_com.getSelectedItem().toString();
        String databasename=t+"_"+id;
//        System.out.println(databasename);
        int type=type_com.getSelectedIndex();
        if (type==1) {
        ImageIcon vote_pres=(ImageIcon) president_image_label.getIcon();
        ImageIcon vote_gov=(ImageIcon) governor_image_label.getIcon();
        ImageIcon vote_mp=(ImageIcon) mp_image_label.getIcon();
        ImageIcon vote_coun=(ImageIcon) councillor_image_label.getIcon();
        
        /////dispalw images
        JPanel panel=new JPanel();
        panel.setLayout(new GridLayout(1,1));
        panel.add(new JLabel(vote_pres));
        panel.add(new JLabel(vote_gov));
        panel.add(new JLabel(vote_mp));
        panel.add(new JLabel(vote_coun));
        
        int a=JOptionPane.showConfirmDialog(this,panel,"YOU ARE VOTING FOR",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);
//        JOptionPane.showMessageDialog(null, "Blah blah blah", "About", JOptionPane.INFORMATION_MESSAGE, vote_coun);
//        int response=JOptionPane.showConfirmDialog(rootPane, vote_pres,"CONFIRM CANDIDATES",JOptionPane.INFORMATION_MESSAGE);
        
        if (a == JOptionPane.OK_OPTION )
            {
                if (president_combo.getSelectedIndex()==0 ||gov_combo.getSelectedIndex()==0||mp_combo.getSelectedIndex()==0||council_combo.getSelectedIndex()==0) {
                  JOptionPane.showMessageDialog(null, "<html><font color=blue><b>Please Select Candidastes in all Categories</b></font></html>","information",JOptionPane.INFORMATION_MESSAGE);
                  }
                else{
                String sql = "SELECT table_name FROM information_schema.tables WHERE table_name = '"+databasename+"'";
//                    select table_name from information_schema.tables


                try {
                    rs = st.executeQuery(sql);
                    st = conn.prepareStatement(sql);
                    if (!rs.next()) {  
//                        CREATE TABLE table_name (field1_name TYPE(SIZE), field2_name TYPE(SIZE));
                        try {
                            
                            st.executeUpdate("CREATE TABLE "+databasename+" (serial_no char(10), voter_id char(5), president text(20), governor text(20), MP text(20), councillor text(20),election_id char(5));");
//                            rs= st.executeQuery("CREATE TABLE "+databasename+" (serial_no char(5), voter_id char(5), president text(20), governor text(20), MP text(20), councillor text(20),election_id char(5));");
                            JOptionPane.showMessageDialog(panel, "database created");
                            String president=president_combo.getSelectedItem().toString();
                        String governor=gov_combo.getSelectedItem().toString();
                        String mbunge=mp_combo.getSelectedItem().toString();
                        String diwani=council_combo.getSelectedItem().toString();
                        String voter_id=voter_id_textfield.getText();
                        String election_id=elecID_combobox.getSelectedItem().toString();
                        String serial=serial_textfield.getText();

//                        SQL statement for checking if a voter has already voted
                        String sql_check_for_voter = "SELECT * from "+databasename+" where voter_id = "+voter_id;
                        try {
                            st = conn.prepareStatement(sql_check_for_voter);
                            rs = st.executeQuery(sql_check_for_voter);

                              if(!rs.next()){
                                                 try {

                            ////insert data in the database
                            String sql_voting="INSERT INTO "+databasename+" VALUES("+
                              "'"+serial+"'," +
                              "'"+voter_id+"',"+
                              "'"+president+"',"+
                              "'"+governor+"',"+
                              "'"+mbunge+"',"+
                              "'"+diwani+"',"+

	                       "'"+election_id+"')";

                            st.execute(sql_voting);
                            JOptionPane.showMessageDialog(null,"You have voted:\n Serial No: "+serial+"\nVoter ID: "+voter_id+"\nPresident: "+president+"\nGovernor: "+governor+"\n MP: "+mbunge+"\n Councillor: "+diwani+"\n Election ID: "+election_id+"\n","Information",JOptionPane.INFORMATION_MESSAGE );

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }


                              }
                              //if result is not found
//                                if(c==0){
                              else
                                  JOptionPane.showMessageDialog(null, "<html><font color=red><b>CANNOT VOTE AGAIN</b></font></html>");


//                                }
                                        //dispaly information if voter id is found in database
//                                else{
//                                    JOptionPane.showMessageDialog(null, "<html> <font color=red><b>VOTER CANNOT VOTE AGAIN</b><font></html>","Information",JOptionPane.ERROR_MESSAGE);
//
//                                }
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage()+"/n"+e.getErrorCode());
                        }

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(panel, e.getMessage());
                        }                                                               
                    }
                    else{
                        //insert the voted candidate details in the database
                        String president=president_combo.getSelectedItem().toString();
                        String governor=gov_combo.getSelectedItem().toString();
                        String mbunge=mp_combo.getSelectedItem().toString();
                        String diwani=council_combo.getSelectedItem().toString();
                        String voter_id=voter_id_textfield.getText();
                        String election_id=elecID_combobox.getSelectedItem().toString();
                        String serial=serial_textfield.getText();
                        
//                        SQL statement for checking if a voter has already voted
                        String sql_check_for_voter = "SELECT * from "+databasename+" where voter_id = "+voter_id;
                        try {
                            st = conn.prepareStatement(sql_check_for_voter);
                            rs = st.executeQuery(sql_check_for_voter);
                            
                              if(!rs.next()){
                                                 try {
                            
                            ////insert data in the database
                            String sql_voting="INSERT INTO "+databasename+" VALUES("+
                              "'"+serial+"'," +
                              "'"+voter_id+"',"+
                              "'"+president+"',"+
                              "'"+governor+"',"+
                              "'"+mbunge+"',"+
                              "'"+diwani+"',"+
                                                       
	                       "'"+election_id+"')";

                            st.execute(sql_voting);
                            JOptionPane.showMessageDialog(null,"You have voted: \n Serial No: "+serial+"\nVoter ID: "+voter_id+"\nPresident: "+president+"\nGovernor: "+governor+"\n MP: "+mbunge+"\n Councillor: "+diwani+"\n Election ID: "+election_id+"\n","Information",JOptionPane.INFORMATION_MESSAGE );

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }
                                  
                              
                              }
                              //if result is not found
//                                if(c==0){ 
                              else
                                  JOptionPane.showMessageDialog(null, "<html><font color=red><b>CANNOT VOTE AGAIN</b></font></html>");
                      
                
//                                }
                                        //dispaly information if voter id is found in database
//                                else{
//                                    JOptionPane.showMessageDialog(null, "<html> <font color=red><b>VOTER CANNOT VOTE AGAIN</b><font></html>","Information",JOptionPane.ERROR_MESSAGE);
//                                    
//                                }
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage()+"/n"+e.getErrorCode());
                        }
                        
                        
                       
                        
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());

                    

                }

            }}
        else
            JOptionPane.showMessageDialog(rootPane, "Confirm Candidate?");
            
        } else if(type==2) {
        
        ImageIcon vote_gov=(ImageIcon) governor_image_label.getIcon();
        
        
        /////dispalw images
        JPanel panel=new JPanel();
        panel.setLayout(new GridLayout(1,1));
        
        panel.add(new JLabel(vote_gov));
        
        int a=JOptionPane.showConfirmDialog(this,panel,"YOU ARE VOTING FOR",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);
//        JOptionPane.showMessageDialog(null, "Blah blah blah", "About", JOptionPane.INFORMATION_MESSAGE, vote_coun);

//        int response=JOptionPane.showConfirmDialog(rootPane, vote_pres,"CONFIRM CANDIDATES",JOptionPane.INFORMATION_MESSAGE);
        
        if (a == JOptionPane.OK_OPTION )
            {
            if (gov_combo.getSelectedIndex()==0) {
                  JOptionPane.showMessageDialog(null, "<html><font color=blue><b>Please Select Candidaste</b></font></html>","information",JOptionPane.INFORMATION_MESSAGE);
                  }
            else{

                String sql = "SELECT table_name FROM information_schema.tables WHERE table_name = '"+databasename+"'";
//                    


                try {
                    rs = st.executeQuery(sql);
                    st = conn.prepareStatement(sql);
                    if (!rs.next()) {
//                        CREATE TABLE table_name (field1_name TYPE(SIZE), field2_name TYPE(SIZE));
                        try {

                            st.executeUpdate("CREATE TABLE "+databasename+" (serial_no char(10), voter_id char(5), governor text(20), election_id char(5));");
//                            rs= st.executeQuery("CREATE TABLE "+databasename+" (serial_no char(5), voter_id char(5), president text(20), governor text(20), MP text(20), councillor text(20),election_id char(5));");
                            JOptionPane.showMessageDialog(panel, "database created");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(panel, e.getMessage());
                        }
                    }
                    else{
                        //insert the voted candidate details in the database
//                        String president=president_combo.getSelectedItem().toString();
                        String governor=gov_combo.getSelectedItem().toString();
//                        String mbunge=mp_combo.getSelectedItem().toString();
//                        String diwani=council_combo.getSelectedItem().toString();
                        String voter_id=voter_id_textfield.getText();
                        String election_id=elecID_combobox.getSelectedItem().toString();
                        String serial=serial_textfield.getText();

//                        SQL statement for checking if a voter has already voted
                        String sql_check_for_voter = "SELECT * from "+databasename+" where voter_id = "+voter_id;
                        try {
                            st = conn.prepareStatement(sql_check_for_voter);
                            rs = st.executeQuery(sql_check_for_voter);

                              if(!rs.next()){
                                  
                             try {

                            ////insert data in the database
                            String sql_voting="INSERT INTO "+databasename+" VALUES("+
                              "'"+serial+"'," +
                              "'"+voter_id+"',"+
//                              "'"+president+"',"+
                              "'"+governor+"',"+
//                              "'"+mbunge+"',"+
//                              "'"+diwani+"',"+

	                       "'"+election_id+"')";

                            st.execute(sql_voting);
                            JOptionPane.showMessageDialog(null,"You have voted:\n Serial No: "+serial+"\nVoter ID: "+voter_id+"\nGovernor: "+governor+"\n Election ID: "+election_id+"\n","Information",JOptionPane.INFORMATION_MESSAGE );

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }


                              }
                              //if result is not found
//                                if(c==0){
                              else
                                  JOptionPane.showMessageDialog(null, "<html><font color=red><b>CANNOT VOTE AGAIN</b></font></html>");


//                                }
                                        //dispaly information if voter id is found in database
//                                else{
//                                    JOptionPane.showMessageDialog(null, "<html> <font color=red><b>VOTER CANNOT VOTE AGAIN</b><font></html>","Information",JOptionPane.ERROR_MESSAGE);
//
//                                }
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }




                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }



            }}
        ///if the no button is clicked in joptionpane
        else
            JOptionPane.showMessageDialog(null, "Please Confirm Candidate? ");



        }else if(type==3){
                    
        ImageIcon vote_mp=(ImageIcon) mp_image_label.getIcon();
        
        
        /////dispalw images
        JPanel panel=new JPanel();
        panel.setLayout(new GridLayout(1,1));
        
        panel.add(new JLabel(vote_mp));
        
        int a=JOptionPane.showConfirmDialog(this,panel,"You are voting for ",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);

        if (a == JOptionPane.OK_OPTION )
            {
            if (mp_combo.getSelectedIndex()==0) {
                  JOptionPane.showMessageDialog(null, "<html><font color=blue><b>Please Select Candidastes </b></font></html>","information",JOptionPane.INFORMATION_MESSAGE);
            }
            else{

                 String sql = "SELECT table_name FROM information_schema.tables WHERE table_name = '"+databasename+"'";
//                    select table_name from information_schema.tables


                try {
                    rs = st.executeQuery(sql);
                    st = conn.prepareStatement(sql);
                    if (!rs.next()) {
//                        CREATE TABLE table_name (field1_name TYPE(SIZE), field2_name TYPE(SIZE));
                        try {

                            st.executeUpdate("CREATE TABLE "+databasename+" (serial_no char(10), voter_id char(5),MP text(20),election_id char(5));");
//
                            JOptionPane.showMessageDialog(panel, "database created");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(panel, e.getMessage());
                        }
                    }
                    else{
                        //insert the voted candidate details in the database
//                        String president=president_combo.getSelectedItem().toString();
//                        String governor=gov_combo.getSelectedItem().toString();
                        String mbunge=mp_combo.getSelectedItem().toString();
//                        String diwani=council_combo.getSelectedItem().toString();
                        String voter_id=voter_id_textfield.getText();
                        String election_id=elecID_combobox.getSelectedItem().toString();
                        String serial=serial_textfield.getText();

//                        SQL statement for checking if a voter has already voted
                        String sql_check_for_voter = "SELECT * from "+databasename+" where voter_id = "+voter_id;
                        try {
                            st = conn.prepareStatement(sql_check_for_voter);
                            rs = st.executeQuery(sql_check_for_voter);

                              if(!rs.next()){
                                                 try {

                            ////insert data in the database
                            String sql_voting="INSERT INTO "+databasename+" VALUES("+
                              "'"+serial+"'," +
                              "'"+voter_id+"',"+
//                              "'"+president+"',"+
//                              "'"+governor+"',"+
                              "'"+mbunge+"',"+
//                              "'"+diwani+"',"+

	                       "'"+election_id+"')";

                            st.execute(sql_voting);
                            JOptionPane.showMessageDialog(null,"YOU HAVE VOTED\n Serial No: "+serial+"\nVoter ID: "+voter_id+"\nMP: "+mbunge+"\nElection ID: "+election_id+"\n","Information",JOptionPane.INFORMATION_MESSAGE );

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }


                              }
                              //if result is not found
//                                if(c==0){
                              else
                                  JOptionPane.showMessageDialog(null, "<html><font color=red><b>CANNOT VOTE AGAIN</b></font></html>");


//                                }
                                        //dispaly information if voter id is found in database
//                                else{
//                                    JOptionPane.showMessageDialog(null, "<html> <font color=red><b>VOTER CANNOT VOTE AGAIN</b><font></html>","Information",JOptionPane.ERROR_MESSAGE);
//
//                                }
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage()+"/n"+e.getErrorCode());
                        }




                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }


            }
            }
        else
            JOptionPane.showMessageDialog(rootPane, "Confirm Your Candidate");
        }
        //////voting for councillor
        else{
        
        ImageIcon vote_coun=(ImageIcon) councillor_image_label.getIcon();
        
        /////dispalw images
        JPanel panel=new JPanel();
        panel.setLayout(new GridLayout(1,1));
        
        panel.add(new JLabel(vote_coun));
        int a=JOptionPane.showConfirmDialog(this,panel,"YOU ARE VOTING FOR",JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);
//        JOptionPane.showMessageDialog(null, "Blah blah blah", "About", JOptionPane.INFORMATION_MESSAGE, vote_coun);

//        int response=JOptionPane.showConfirmDialog(rootPane, vote_pres,"CONFIRM CANDIDATES",JOptionPane.INFORMATION_MESSAGE);
        
        if (a == JOptionPane.OK_OPTION )
            {
            if (council_combo.getSelectedIndex()==0) {
                  JOptionPane.showMessageDialog(null, "<html><font color=blue><b>Please Select Candidastes in all Categories</b></font></html>","information",JOptionPane.INFORMATION_MESSAGE);
             }
              else{

                     String sql = "SELECT table_name FROM information_schema.tables WHERE table_name = '"+databasename+"'";
//                    select table_name from information_schema.tables


                try {
                    rs = st.executeQuery(sql);
                    st = conn.prepareStatement(sql);
                    if (!rs.next()) {
//                        CREATE TABLE table_name (field1_name TYPE(SIZE), field2_name TYPE(SIZE));
                        try {

                            st.executeUpdate("CREATE TABLE "+databasename+" (serial_no char(10), voter_id char(5),councillor text(20),election_id char(5));");
                            
                            JOptionPane.showMessageDialog(panel, "database created");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(panel, e.getMessage());
                        }
                    }
                    else{
                        //insert the voted candidate details in the database

                        String diwani=council_combo.getSelectedItem().toString();
                        String voter_id=voter_id_textfield.getText();
                        String election_id=elecID_combobox.getSelectedItem().toString();
                        String serial=serial_textfield.getText();

//                        SQL statement for checking if a voter has already voted
                        String sql_check_for_voter = "SELECT * from "+databasename+" where voter_id = "+voter_id;
                        try {
                            st = conn.prepareStatement(sql_check_for_voter);
                            rs = st.executeQuery(sql_check_for_voter);

                              if(!rs.next()){
                                                 try {

                            ////insert data in the database
                            String sql_voting="INSERT INTO "+databasename+" VALUES("+
                              "'"+serial+"'," +
                              "'"+voter_id+"',"+
                              "'"+diwani+"',"+

	                       "'"+election_id+"')";

                            st.execute(sql_voting);
                            JOptionPane.showMessageDialog(null,"YOU HAVE VOTED\n Serial No: "+serial+"\nVoter ID: "+voter_id+"\n Councillor: "+diwani+"\n Election ID: "+election_id+"\n","Information",JOptionPane.INFORMATION_MESSAGE );

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }


                              }
                              //if result is not found
//                                if(c==0){
                              else
                                  JOptionPane.showMessageDialog(null, "Confirm Your Candidates");


//                                }
                                        //dispaly information if voter id is found in database
//                                else{
//                                    JOptionPane.showMessageDialog(null, "<html> <font color=red><b>VOTER CANNOT VOTE AGAIN</b><font></html>","Information",JOptionPane.ERROR_MESSAGE);
//
//                                }
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e.getMessage()+"/n"+e.getErrorCode());
                        }




                    }

                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                    System.out.println(e.getMessage());
                    System.out.println(e.getErrorCode());



                }

            }
            }
        else
            JOptionPane.showMessageDialog(null, "Confirm Candidate");
        }
            
        
        
        


        // TODO add your handling code here:
    }//GEN-LAST:event_voting_buttonActionPerformed

    private void type_comActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type_comActionPerformed
        
        int a=type_com.getSelectedIndex();
        if (a==2) {
            county_lab.setVisible(true);
            county_com.setVisible(true);
            cons_lab.setVisible(false);
            cons_com.setVisible(false);
            ward_lab.setVisible(false);
            ward_com.setVisible(false);
            
            
            /////////////////////////////////////////////////////////////////////////////////////////////////////
            //////////////////////     select the county names from the county batabase      ////////////////////
            /////////////////////////////////////////////////////////////////////////////////////////////////////
          
            
            
        } else if(a==3){
            
            cons_lab.setVisible(true);
            cons_com.setVisible(true);
            county_lab.setVisible(false);
            county_com.setVisible(false);
            ward_lab.setVisible(false);
            ward_com.setVisible(false);
            
            
        }else if(a==4){
            ward_lab.setVisible(true);
            ward_com.setVisible(true);
            county_lab.setVisible(false);
            county_com.setVisible(false);
            cons_lab.setVisible(false);
            cons_com.setVisible(false);
            
        } else{
            county_lab.setVisible(false);
            county_com.setVisible(false);
            cons_lab.setVisible(false);
            cons_com.setVisible(false);
            ward_lab.setVisible(false);
            ward_com.setVisible(false);
        }
        // TODO add your handling code here:
}//GEN-LAST:event_type_comActionPerformed

    private void elecID_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elecID_comboboxActionPerformed
        // TODO add your handling code here:
              String selected=elecID_combobox.getSelectedItem().toString();
              elecID_combobox.setEnabled(false);
        try {
                    
                    String sql="Select * from election_details where election_id ='"+selected+"'";
                    rs=st.executeQuery(sql);
                    st=conn.prepareStatement(sql);
                    while (rs.next()) { 
                    String type=rs.getString("type");
                    String county=rs.getString("county");
                    String constituency=rs.getString("constituency");
                    String ward=rs.getString("ward");
                        if (type.equals("General_Election")) {
                            type_com.setSelectedIndex(1);
                            verify_button.setEnabled(true);
                            if_general_showWard_combo.setEnabled(true);
                            ////getting the county constituency and ward when it is general election
                            
                            try {
                    
                                        String ward_sql="Select * from ward_database where name ='"+input+"'";
                                        rs=st.executeQuery(sql);
                                        st=conn.prepareStatement(sql);
                                        while (rs.next()) { 
                                        String constituency_of_input_ward=rs.getString("constituency");
                                        String county_of_input_ward=rs.getString("county");
                                        
                                        county_com.addItem(county_of_input_ward);
                                        county_com.addItem(constituency_of_input_ward);
                                        ward_com.addItem(input);

                                }

                            } catch (Exception e) {
//                                JOptionPane.showMessageDialog(electionpane, e);
                            }
                            
                            
                            
                        } else if(type.equals("County_By_Election")){
                            type_com.setSelectedIndex(2);
                            county_com.addItem(county);
                            verify_button.setEnabled(true);
                            
                        }else if(type.equals("Constituency_By_Election")){
                            type_com.setSelectedIndex(3);
                            cons_com.addItem(constituency);
                            verify_button.setEnabled(true);
                        }else if(type.equals("Ward_By_Election")){
                            type_com.setSelectedIndex(4);
                            ward_com.addItem(ward);
                            verify_button.setEnabled(true);
                        }else{
                        verify_button.setEnabled(false);
                        if_general_showWard_combo.setEnabled(false);
                        }
//                    constituency_textfield.setText(constituency);
//                    county_textfield.setText(county);
                
            }
                    
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(electionpane, e);
        }
    }//GEN-LAST:event_elecID_comboboxActionPerformed

    private void user_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_idActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void if_general_showWard_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_if_general_showWard_comboActionPerformed

        // TODO add your handling code here:
        String general_ward_selected=if_general_showWard_combo.getSelectedItem().toString();
          try {

                    String sql="Select * from ward_database where name ='"+general_ward_selected+"'";
                    rs=st.executeQuery(sql);
                    st=conn.prepareStatement(sql);
                    while (rs.next()) {
                    gen_county=rs.getString("county");
                    gen_constituency=rs.getString("constituency");
                    gen_county_textfield.setText(gen_county);
                    gen_const_textfields.setText(gen_constituency);


            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_if_general_showWard_comboActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        
        int a=JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to log out", "Logout", JOptionPane.YES_NO_OPTION);
        if (a==JOptionPane.OK_OPTION) {
            Log_in_form2 lg=new Log_in_form2();
            this.show(false);
            lg.show();
            
        } else {
            this.show(true);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        select_frame sf=new select_frame();
        sf.show();
        this.show(false);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        id_number.setText("");
        voter_id_textfield.setText("");
        president_combo.setSelectedIndex(0);
        gov_combo.setSelectedIndex(0);
        mp_combo.setSelectedIndex(0);
        council_combo.setSelectedIndex(0);
        mp_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unknow_user_image - Copy.jpg"))); // NOI18N
        governor_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unknow_user_image - Copy.jpg"))); // NOI18N
        president_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unknow_user_image - Copy.jpg"))); // NOI18N
        councillor_image_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unknow_user_image - Copy.jpg"))); // NOI18N
        



    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        ////////////////////////////////////
        ///////Give the Gui window /////////
        /////// look and feel      /////////
        ////////////////////////////////////
        try {
                      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                    } catch (Exception e) {
                      System.err.println("Look and feel not set.");
                    }
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new voting_for_candidate().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JComboBox cons_com;
    private javax.swing.JLabel cons_lab;
    private javax.swing.JLabel council;
    private javax.swing.JComboBox council_combo;
    private javax.swing.JLabel councillor_image_label;
    private javax.swing.JComboBox county_com;
    private javax.swing.JLabel county_lab;
    private javax.swing.JComboBox elecID_combobox;
    private javax.swing.JLabel elec_lab;
    private javax.swing.JTextField gen_const_textfields;
    private javax.swing.JTextField gen_county_textfield;
    private javax.swing.JLabel gov;
    private javax.swing.JComboBox gov_combo;
    private javax.swing.JLabel governor_image_label;
    private javax.swing.JTextField id_number;
    private javax.swing.JComboBox if_general_showWard_combo;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton login_button;
    private javax.swing.JLabel mp;
    private javax.swing.JComboBox mp_combo;
    private javax.swing.JLabel mp_image_label;
    private javax.swing.JLabel pres;
    private javax.swing.JComboBox president_combo;
    private javax.swing.JLabel president_image_label;
    private javax.swing.JLabel serial_label;
    private javax.swing.JTextField serial_textfield;
    private javax.swing.JButton start_voting_button_;
    private javax.swing.JComboBox type_com;
    private javax.swing.JTextField user_id;
    private javax.swing.JPasswordField userpass;
    private javax.swing.JTable verification_table;
    private javax.swing.JButton verify_button;
    private javax.swing.JTextField voter_id_textfield;
    private javax.swing.JButton voting_button;
    private javax.swing.JComboBox ward_com;
    private javax.swing.JLabel ward_lab;
    // End of variables declaration//GEN-END:variables
}
