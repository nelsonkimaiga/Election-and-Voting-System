package MVoter;


import java.awt.Image;
import java.io.*;
import javax.swing.*;
import java.sql.*;

public class candidate_form extends javax.swing.JFrame {
    Connection conn= null;
    String url = "jdbc:mysql://localhost/";
    String dbName = "db66001";
    String driver ="com.mysql.jdbc.Driver";
    String user = "root";
    String password = "";

    /*Connection conn = null;
    String url = "jdbc:mysql://192.168.170.15/";
    String dbName = "db66001";
    String driver = "com.mysql.jdbc.Driver";
    String userName = "66001";
    String password = "66001";*/
    Statement st;
    ResultSet rs;
    private File file=null;
    private String path="";

    /** Creates new form candidate_form */
        private void updatejtable() {
  
        String sql = "select* from candidates";
     
        try {
            st = conn.prepareStatement(sql);
            rs = st.executeQuery(sql);
          canidates_table.setModel(DbUtils.resultSetToTableModel(rs));
//            table.setModel(DbUtils.resultSetToTableModel(rs));
             } catch (Exception exp) 
             {
            //System.out.println(exp);
            JOptionPane.showMessageDialog(null, "Cannot connect to the database,check network settings.","ERROR",JOptionPane.ERROR_MESSAGE);
             }
    }






    public candidate_form() {
        initComponents();
        this.setLocationRelativeTo(null);

         try{
	       Class.forName(driver);

             conn = DriverManager.getConnection(url+dbName,user,password);

              st = conn.createStatement();

             this.setTitle("Candidates Panel");

	       }


	            catch(Exception exp)
                    {
                        
	              JOptionPane.showMessageDialog(rootPane, "Error: " + exp.getMessage());
	            }
         try {
            
            
            
	            rs = st.executeQuery("SELECT election_id FROM election_details");
	            while(rs.next()){
                     elect_id.addItem(rs.getString("election_id"));
                    }
	            rs.close();
	            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        post_combobox = new javax.swing.JComboBox();
        voter_id = new javax.swing.JTextField();
        candidate_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        canidates_table = new javax.swing.JTable();
        add_new_button = new javax.swing.JButton();
        clear_button = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        search_txt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        elect_id = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        text = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel1.setText("CANDIDATE DETAILS");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jLabel2.setText("Candidate ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jLabel3.setText("Voter ID");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jLabel5.setText("First Name");

        post_combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "President", "Governor", "MP", "Councillor" }));

        canidates_table.setFont(new java.awt.Font("Times New Roman", 0, 12));
        canidates_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Election ID", "Candidate ID", "First name", "Last Name", "County", "Constituency", "Ward", "Post"
            }
        ));
        canidates_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canidates_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(canidates_table);

        add_new_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        add_new_button.setText("Add New");
        add_new_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_new_buttonActionPerformed(evt);
            }
        });

        clear_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        clear_button.setText("Clear");
        clear_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_buttonActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jButton4.setText("search first name");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton6.setText("Logout");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setText("update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        elect_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elect_idActionPerformed(evt);
            }
        });

        jButton1.setText("Upload Image (max 2MB)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVoter/unknow_user_image - Copy.jpg"))); // NOI18N

        jLabel6.setText("Election ID");

        fname.setEditable(false);

        lname.setEditable(false);

        jLabel7.setText("Post");

        text.setEditable(false);

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Voter Registration");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Voting");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jButton1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(text, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel2))
                                                    .addGap(31, 31, 31)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fname, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                        .addComponent(lname, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                        .addComponent(candidate_id, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                        .addComponent(voter_id, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                        .addComponent(elect_id, 0, 134, Short.MAX_VALUE)
                                                        .addComponent(post_combobox, 0, 134, Short.MAX_VALUE)))
                                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(28, 28, 28))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel7))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(add_new_button)
                                .addGap(18, 18, 18)
                                .addComponent(clear_button, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 766, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton5)
                                .addComponent(jButton2))
                            .addComponent(jButton6)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(candidate_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(voter_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(elect_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(post_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_new_button)
                    .addComponent(clear_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        candidate_id.setEditable(false);
        for(int i=0; i < 1 ; i++){
            candidate_id.setText("CN"+(int)(Math.random()*500));
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_new_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_new_buttonActionPerformed



        String c_id = candidate_id.getText() ;
        String v_id = voter_id.getText() ;
        String e_id=elect_id.getSelectedItem().toString();
        String post =post_combobox.getSelectedItem().toString();
        String fn=fname.getText();
        String l=lname.getText();
        
        try {
            String sql = "Select * from candidates where voter_id like'"+v_id+"' and election_id like '"+e_id+"'";
             st = conn.prepareStatement(sql);
            rs = st.executeQuery(sql);
            int c=0;
                  while(rs.next()){
                    c++;
                    }
            if(c==0){

            String sql2 = "Select voter_id ,s_name,l_name from registration where voter_id like'"+v_id+"'";
        try {
            st = conn.prepareStatement(sql2);
            rs = st.executeQuery(sql2);
            boolean d=rs.next();
                  if(d==true){
                        try {
                          String fnm=rs.getString("s_name");
                          String lnm=rs.getString("l_name");
//                          String constituency=rs.getString("ward");

                         String sql3 = "Select election_id from election_details where election_id like'"+e_id+"'";
                         rs = st.executeQuery(sql3);
                         int s=0;
                           while(rs.next()){
                               s++;  }
                           if (s==1) {

                                try{
                                    File f=new File(path);
                                    PreparedStatement psmnt = conn.prepareStatement("Insert into candidates values (?, ?,? ,? ,? ,?,?)");
                                    psmnt.setString(1,c_id);
                                    psmnt.setString(2,v_id);
                                    psmnt.setString(3,fnm);
                                    psmnt.setString(4,lnm);
                                    psmnt.setString(5,e_id);
                                    psmnt.setString(6,post);
                                    FileInputStream fis = new FileInputStream(f);
                                    psmnt.setBinaryStream(7, (InputStream)fis, (int)(f.length()));
                                    int i = psmnt.executeUpdate();

	                             JOptionPane.showMessageDialog(null,"Successfully saved:\n"+c_id+",\n "+lnm+",\n "+fnm+",\n "+post);

	                          }catch(Exception exp){
	                              JOptionPane.showMessageDialog(null, exp.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
	                          }

                          } else {
                               JOptionPane.showMessageDialog(rootPane, "Voter ID "+e_id+" is not a registered Election ID","ERROR",JOptionPane.ERROR_MESSAGE);
                          }
                      } catch (Exception e) {
                          JOptionPane.showMessageDialog(rootPane, e.getMessage());
                      }

                    }
                  else{
                      JOptionPane.showMessageDialog(rootPane, "Voter ID not registered!");
                  }











        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);

        }
            }
         else{
                JOptionPane.showMessageDialog(null, "Can Only be registered once for Election_ID "+v_id);

         }

        } catch (Exception e) {

        }
   


        



    }//GEN-LAST:event_add_new_buttonActionPerformed

    private void clear_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_buttonActionPerformed

        for(int i=0; i < 1 ; i++){
        candidate_id.setText("CN"+(int)(Math.random()*500));}
        voter_id.setText("");
        elect_id.setSelectedIndex(0);
        post_combobox.setSelectedIndex(0);
        text.setText("");
        fname.setText("");
        lname.setText("");
        search_txt.setText("");
        label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unknow_user_image - Copy.jpg"))); // NOI18N

        
        // TODO add your handling code here:
    }//GEN-LAST:event_clear_buttonActionPerformed

    private void elect_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elect_idActionPerformed

        
        // TODO add your handling code here:
    }//GEN-LAST:event_elect_idActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
        
        
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new ImageFileFilter1());
        int returnVal = chooser.showOpenDialog(null);
        
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            path=file.getPath();
//            ImageIcon icon=new ImageIcon(path);
             ImageIcon tinyPicture= new ImageIcon(path);
            Image image= tinyPicture.getImage();
            image = image.getScaledInstance(200, -1, Image.SCALE_SMOOTH);
            label.setIcon(tinyPicture);
//            label.setIcon(icon);
            text.setText(path);
            
            repaint();
            

tinyPicture.setImage(image);

        }
        // TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    private void canidates_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canidates_tableMouseClicked
        // TODO add your handling code here:\
       int row = canidates_table.getSelectedRow();
        candidate_id.setText(canidates_table.getModel().getValueAt(row, 0).toString());
        voter_id.setText(canidates_table.getModel().getValueAt(row, 1).toString());
        fname.setText(canidates_table.getModel().getValueAt(row, 2).toString());
        lname.setText(canidates_table.getModel().getValueAt(row, 3).toString());
        elect_id.setSelectedItem(canidates_table.getModel().getValueAt(row, 4).toString());
        post_combobox.setSelectedItem(canidates_table.getModel().getValueAt(row, 5).toString());
//        ImageIcon
//        label.setIcon(canidates_table.getModel().getValueAt(row, 6).toString());


    }//GEN-LAST:event_canidates_tableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        String sql = "update candidates set candidate_id='" + elect_id.getSelectedItem().toString() + "',post='" + post_combobox.getSelectedItem().toString() + "' where Candidate_id = '" + candidate_id.getText() + "'";

            int q = JOptionPane.showConfirmDialog(null, "Are you sure you want to update?","INFO",JOptionPane.INFORMATION_MESSAGE);
            switch (q) {
                case 0:
                    try {
                        st = conn.prepareStatement(sql);
                        st.executeUpdate(sql);
//                        updatejtable();

//                        receipt.setText("");
//                        two.setText("");
//                        id.setText("");
//                        store.setText("");
//                        two.setText("");
//                        rec.setText("");
//                       cur.setDate(null);
//                        cost.setText("");
//                        price.setText("");
//                        srch.setText("");
//                        type.setText("");
//                        shelf.setText("");
                        JOptionPane.showMessageDialog(null, "The information has been successfully updated ","INFO",JOptionPane.INFORMATION_MESSAGE);
                        updatejtable();
                        break;
                    } catch (Exception exp) {
                        System.out.println(exp);
                        JOptionPane.showMessageDialog(null, "The information has not been updated ","ERROR",JOptionPane.ERROR_MESSAGE);
                    }
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
updatejtable();

// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//   updatejtable();       // TODO add your handling code here:
        String temp = search_txt.getText() + "%";
        String sql = "Select * from candidates  where Fname like'"+temp+"'";
        try{
            st = conn.prepareStatement(sql);
            rs = st.executeQuery(sql);
            canidates_table.setModel(DbUtils.resultSetToTableModel(rs));
            if(!rs.absolute(1)){ JOptionPane.showMessageDialog(null, "No results were found: ","INFO",JOptionPane.INFORMATION_MESSAGE );}
                

        } catch(Exception exp){
            System.out.println(exp);
           

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

         String sql = "delete  from candidates where candidate_id = '"+candidate_id.getText()+"'";
        try{
            
             st = (Statement) conn.prepareStatement(sql);
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Deletion successful","INFO",JOptionPane.INFORMATION_MESSAGE);
                                            
        } catch(Exception exp){
            JOptionPane.showMessageDialog(null, "Candidate was not successfully deleted","ERROR",JOptionPane.ERROR_MESSAGE);           

        }
        
        updatejtable();    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        select_frame sf=new select_frame();
        sf.show();
        this.show(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
//        after_login_interface al=new after_login_interface();
//        al.show();
//        this.show(false);
        after_login_interface sf=new after_login_interface();
        sf.show();
        this.show(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int a=JOptionPane.showConfirmDialog(rootPane, "Are you sure you sure you want to logout?", "LOGOUT", JOptionPane.YES_NO_OPTION);
        if (a==JOptionPane.OK_OPTION) {
            
            Log_in_form2 lf=new Log_in_form2();
            lf.show();
            this.show(false);
            
            
        } else {
//            this.show(true);
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
                      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                    } catch (Exception e) {
                      System.err.println("Look and feel not set.");
                    }
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new candidate_form().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_new_button;
    private javax.swing.JTextField candidate_id;
    private javax.swing.JTable canidates_table;
    private javax.swing.JButton clear_button;
    private javax.swing.JComboBox elect_id;
    private javax.swing.JTextField fname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JTextField lname;
    private javax.swing.JComboBox post_combobox;
    private javax.swing.JTextField search_txt;
    private javax.swing.JTextField text;
    private javax.swing.JTextField voter_id;
    // End of variables declaration//GEN-END:variables
}
